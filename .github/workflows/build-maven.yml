on:
  workflow_call:
    inputs:
      java-version:
        type: string
        description: "[Version Java à être utiliser](https://github.com/actions/setup-java#supported-version-syntax)"
        default: "17"
      distribution:
        type: string
        description: "[Distribution Java](https://github.com/actions/setup-java#supported-distributions)"
        default: "corretto"
      architecture:
        type: string
        description: "Architecture cible (x86, x64, armv7, aarch64, ppc64le)"
        default: "x86"
      role-to-assume:
        type: string
        description: "Rôle AWS à assumer pour la publication de l'image Docker dans ECR"
        required: true
      role-session-name:
          type: string
          description: "Nom de la session pour le rôle AWS assumé"
          required: true
      ecr-registry:
        type: string
        description: "Numéro de compte du registre ECR si différent que numéro de compte du rôle assumé"
        required: false
      ecr-repository:
        type: string
        description: "Nom du dépôt ECR où doit être pousser l'image Docker"
        required: true
      aws_region:
        type: string
        description: "Region AWS"
        required: false
        default: "ca-central-1"

env:
  MVNCMD: ./mvnw -B
  JAVA_VERSION: ${{ github.event.inputs.java-version || github.event.inputs.java-version.default }}
  DISTRIBUTION: ${{ github.event.inputs.distribution || github.event.inputs.distribution.default }}
  ARCHITECTURE: ${{ github.event.inputs.architecture || github.event.inputs.architecture.default }}
  AWS_REGION: ${{ github.event.inputs.aws_region || github.event.inputs.architecture.default }}

jobs:
  detect_wrapper:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Detect maven wrapper
        id: detect_wrapper
        run: |
          if [ ! -f ${{ github.workspace }}/mvnw ]; then
            echo "Assurez-vous d'installer le wrapper maven" && exit 1
          fi
        shell: bash

  build:
    permissions:
      contents: read
      packages: write
    needs:
      - detect_wrapper
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          architecture: ${{ env.ARCHITECTURE }}
          cache: maven

      - name: Prepare maven wrapper
        run: |
          chmod +x ${{ github.workspace }}/mvnw
        shell: bash

      - name: Build and Deploy
        run: |
          $MVNCMD package deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract deployed version number
        id: get_published_version
        run: |
          if [ -f '${{ github.workspace }}/target/deploy-recorder.lst' ]; then
            echo "published_version=$(awk -F':' '/jar/ {print $4}' ${{ github.workspace }}/target/deploy-recorder.lst)" >> $GITHUB_OUTPUT
          else 
             echo "Assurez-vous d'installer l'extension (https://github.com/khmarbaise/deployment-recorder-extension) dans votre repos" && exit 1
          fi
    outputs:
      published_version: ${{ steps.get_published_version.outputs.published_version }}

  publish_docker:
    permissions:
      contents: read
      id-token: write
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          architecture: ${{ env.ARCHITECTURE }}
          cache: maven

      - name: Prepare maven wrapper
        run: |
          chmod +x ${{ github.workspace }}/mvnw
        shell: bash

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ github.event.inputs.role-to-assume }}
          role-session-name: ${{ github.event.inputs.role-session-name }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ github.event.inputs.ecr-registry }}

      - name: Normalize git branch name
        id: normalized-branch-name
        uses: ankitvgupta/ref-to-tag-action@master
        with:
          ref: ${{ github.ref }}
          head_ref: ${{ github.head_ref }}

      - name: Get Last short commit id
        id: get_commit_id
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Publish to Amazon ECR
        run: |
          $MVNCMD compile jib:build \
            -Dimage=${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.ecr-repository }}:${{ needs.build.outputs.published_version }} \
            -Djib.to.tags=${{ steps.normalized-branch-name.outputs.tag }}.${{ steps.get_commit_id.outputs.sha_short }}